{"ast":null,"code":"var _jsxFileName = \"/Users/dusanmojsilovic/Desktop/InterviewReport/src/pages/LogIn/LogIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport \"./LogIn.scss\";\nimport { Redirect } from \"react-router-dom\";\nimport { reportsContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = () => {\n  _s();\n\n  const {\n    token,\n    setToken\n  } = useContext(reportsContext);\n  const [details, setDetails] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = details;\n  const [errMessage, setErrMessage] = useState('');\n\n  const submitHandler = e => {\n    const url = \"http://localhost:3333/login\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(response => response.json()).then(response => {\n      if (response.accessToken) {\n        setToken(response.accessToken);\n        localStorage.setItem(\"token\", response.accessToken);\n      } else {\n        throw new Error(\"Wrong email or password. Please try again!\");\n      }\n    }).catch(error => {\n      setErrMessage(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logIn\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), \"Log in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), errMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errMessage\",\n          children: errMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            onChange: e => setDetails({ ...details,\n              email: e.target.value\n            }),\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            onChange: e => setDetails({ ...details,\n              password: e.target.value\n            }),\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-btn\",\n          type: \"button\",\n          value: \"LOGIN\",\n          onClick: submitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), token && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogIn, \"lFijNLVAm2lL0cg4hQ+u3hrlkX0=\");\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["/Users/dusanmojsilovic/Desktop/InterviewReport/src/pages/LogIn/LogIn.js"],"names":["React","useState","useContext","Redirect","reportsContext","LogIn","token","setToken","details","setDetails","email","password","errMessage","setErrMessage","submitHandler","e","url","fetch","method","headers","body","JSON","stringify","then","response","json","accessToken","localStorage","setItem","Error","catch","error","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport \"./LogIn.scss\";\nimport { Redirect } from \"react-router-dom\";\nimport { reportsContext } from '../../App';\n\nconst LogIn = () => {\n  const { token, setToken } = useContext(reportsContext);\n  const [details, setDetails] = useState({ email: \"\", password: \"\" });\n  const { email, password } = details;\n  const [errMessage, setErrMessage] = useState('');\n\n\n\n\n  const submitHandler = (e) => {\n    const url = \"http://localhost:3333/login\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.accessToken) {\n          setToken(response.accessToken);\n          localStorage.setItem(\"token\", response.accessToken);\n\n        } else {\n          throw new Error(\"Wrong email or password. Please try again!\");\n        }\n      })\n      .catch((error) => {\n        setErrMessage(error.message);\n      });\n  };\n\n\n  return (\n    <div className=\"logIn\">\n      <form>\n        <div className=\"form-inner\">\n          <h2><i className=\"far fa-user\"></i>Log in</h2>\n          {errMessage && <span className=\"errMessage\">{errMessage}</span>}\n          <div className=\"form-group\">\n            <label className=\"email\">Email: </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              onChange={(e) => setDetails({ ...details, email: e.target.value })}\n              value={email}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"password\">Password: </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              onChange={(e) =>\n                setDetails({ ...details, password: e.target.value })}\n              value={password}\n            />\n          </div>\n          <input className='login-btn' type=\"button\" value=\"LOGIN\" onClick={submitHandler} />\n          {token && <Redirect to=\"/reports\" />}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}