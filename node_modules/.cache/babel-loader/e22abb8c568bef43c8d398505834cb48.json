{"ast":null,"code":"var _jsxFileName = \"/Users/dusanmojsilovic/Desktop/InterviewReport/src/pages/CandidateDetails/CandidateDetails.js\",\n    _s = $RefreshSig$();\n\nimport \"./CandidateDetails.scss\";\nimport React, { useContext, useState } from \"react\";\nimport { candidatesContext } from \"../../App\";\nimport { reportsContext } from \"../../App\";\nimport Modal from \"../../components/Modal/Modal\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CandidateDetails = props => {\n  _s();\n\n  const {\n    candidates\n  } = useContext(candidatesContext);\n  const {\n    reports\n  } = useContext(reportsContext);\n  const [modal, setModal] = useState(false);\n  const [report, setReport] = useState(null);\n  const profile = candidates.find(e => e.id == props.match.params.id);\n  const reportsData = reports && reports.filter(e => e.candidateName == profile.name);\n\n  const showModal = rep => {\n    setModal(!modal);\n    setReport(rep);\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const getRealDate = e => {\n    let realDate = new Date(e);\n    let date = realDate.getDate();\n    let month = realDate.getMonth() + 1;\n    let year = realDate.getFullYear();\n    return `${date}.${month < 10 ? `0${month}` : `${month}`}.${year}`;\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Logo\",\n        children: \"Interview Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"back-btn\",\n        to: \"/\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CandidateDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: profile.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: profile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: profile.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Date of Birth: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: getRealDate(profile.birthday)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Education: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: profile.education\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"TableGrid\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interview Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), reportsData && reportsData.map(e => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: e.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getRealDate(e.interviewDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: e.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"eye\",\n              onClick: () => showModal(e),\n              children: \" \\uD83D\\uDC41\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, e.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modal,\n        reportsData: report,\n        handleClose: closeModal,\n        getRealDate: getRealDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CandidateDetails, \"ULSSBqtXJADMm1hz9kV+PyYJ3yU=\");\n\n_c = CandidateDetails;\nexport default CandidateDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandidateDetails\");","map":{"version":3,"sources":["/Users/dusanmojsilovic/Desktop/InterviewReport/src/pages/CandidateDetails/CandidateDetails.js"],"names":["React","useContext","useState","candidatesContext","reportsContext","Modal","Link","CandidateDetails","props","candidates","reports","modal","setModal","report","setReport","profile","find","e","id","match","params","reportsData","filter","candidateName","name","showModal","rep","closeModal","getRealDate","realDate","Date","date","getDate","month","getMonth","year","getFullYear","avatar","email","birthday","education","map","companyName","interviewDate","status"],"mappings":";;;AAAA,OAAO,yBAAP;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAiBR,UAAU,CAACE,iBAAD,CAAjC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAcT,UAAU,CAACG,cAAD,CAA9B;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMa,OAAO,GAAGN,UAAU,CAACO,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQV,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBF,EAAhD,CAAhB;AACA,QAAMG,WAAW,GAAGX,OAAO,IAAIA,OAAO,CAACY,MAAR,CAAeL,CAAC,IAAIA,CAAC,CAACM,aAAF,IAAmBR,OAAO,CAACS,IAA/C,CAA/B;;AAGA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACzBd,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAG,IAAAA,SAAS,CAACY,GAAD,CAAT;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACvBf,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMgB,WAAW,GAAIX,CAAD,IAAO;AACzB,QAAIY,QAAQ,GAAG,IAAIC,IAAJ,CAASb,CAAT,CAAf;AACA,QAAIc,IAAI,GAAGF,QAAQ,CAACG,OAAT,EAAX;AACA,QAAIC,KAAK,GAAGJ,QAAQ,CAACK,QAAT,KAAsB,CAAlC;AACA,QAAIC,IAAI,GAAGN,QAAQ,CAACO,WAAT,EAAX;AAEA,WAAQ,GAAEL,IAAK,IAAGE,KAAK,GAAG,EAAR,GAAc,IAAGA,KAAM,EAAvB,GAA4B,GAAEA,KAAM,EAAE,IAAGE,IAAK,EAAhE;AACD,GAPD;;AAUA,MAAI,CAACpB,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEA,OAAO,CAACsB;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKtB,OAAO,CAACS;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,wBAAKT,OAAO,CAACuB;AAAb;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKV,WAAW,CAACb,OAAO,CAACwB,QAAT;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,wBAAKxB,OAAO,CAACyB;AAAb;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGnB,WAAW,IAAIA,WAAW,CAACoB,GAAZ,CAAgBxB,CAAC,iBAC/B;AAAA,kCACE;AAAA,sBAAKA,CAAC,CAACyB;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKd,WAAW,CAACX,CAAC,CAAC0B,aAAH;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAK1B,CAAC,CAAC2B;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,mCAAI;AAAM,cAAA,SAAS,EAAC,KAAhB;AAAsB,cAAA,OAAO,EAAE,MAAMnB,SAAS,CAACR,CAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA,gBADc,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAgCE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEP,KAAd;AACE,QAAA,WAAW,EAAEE,MADf;AAEE,QAAA,WAAW,EAAEc,UAFf;AAGE,QAAA,WAAW,EAAEC;AAHf;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AA+CD,CAjFD;;GAAMrB,gB;;KAAAA,gB;AAmFN,eAAeA,gBAAf","sourcesContent":["import \"./CandidateDetails.scss\";\nimport React, { useContext, useState } from \"react\";\nimport { candidatesContext } from \"../../App\";\nimport { reportsContext } from \"../../App\";\nimport Modal from \"../../components/Modal/Modal\";\nimport { Link } from \"react-router-dom\";\n\nconst CandidateDetails = (props) => {\n  const { candidates } = useContext(candidatesContext);\n  const { reports } = useContext(reportsContext);\n\n  const [modal, setModal] = useState(false);\n  const [report, setReport] = useState(null);\n\n  const profile = candidates.find(e => e.id == props.match.params.id);\n  const reportsData = reports && reports.filter(e => e.candidateName == profile.name);\n\n\n  const showModal = (rep) => {\n    setModal(!modal);\n    setReport(rep);\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const getRealDate = (e) => {\n    let realDate = new Date(e);\n    let date = realDate.getDate();\n    let month = realDate.getMonth() + 1;\n    let year = realDate.getFullYear();\n\n    return `${date}.${month < 10 ? `0${month}` : `${month}`}.${year}`;\n  };\n\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"Header\">\n        <div className=\"Logo\">Interview Reports</div>\n        <Link className=\"back-btn\" to=\"/\">\n          Back\n        </Link>\n      </div>\n      <div className=\"CandidateDetails\">\n        <div className=\"Info\">\n          <img src={profile.avatar} />\n          <div className='content'>\n            <div>\n              <p>Name: </p>\n              <h3>{profile.name}</h3>\n              <p>Email: </p>\n              <h3>{profile.email}</h3>\n            </div>\n            <div>\n              <p>Date of Birth: </p>\n              <h3>{getRealDate(profile.birthday)}</h3>\n              <p>Education: </p>\n              <h3>{profile.education}</h3>\n            </div>\n          </div>\n        </div>\n        <table className=\"TableGrid\">\n          <tr>\n            <th>Company</th>\n            <th>Interview Date</th>\n            <th colSpan=\"2\">Status</th>\n          </tr>\n          {reportsData && reportsData.map(e =>\n            <tr key={e.id}>\n              <td>{e.companyName}</td>\n              <td>{getRealDate(e.interviewDate)}</td>\n              <td>{e.status}</td>\n              <td><span className='eye' onClick={() => showModal(e)}> &#128065;</span></td>\n            </tr>)}\n        </table>\n        <Modal modal={modal}\n          reportsData={report}\n          handleClose={closeModal}\n          getRealDate={getRealDate} />\n      </div>\n    </>\n  )\n}\n\nexport default CandidateDetails;\n"]},"metadata":{},"sourceType":"module"}